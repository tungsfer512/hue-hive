{"version":3,"file":"hue-16bbf7a6-bundle-a2a4f8506cb55bb7.js","mappingssources":["webpack:///./desktop/core/src/desktop/js/catalog/api.ts"],"sourcesContent":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  Cloudera, Inc. licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CancellablePromise } from 'api/cancellablePromise';\nimport { extractErrorMessage, get, post, successResponseIsError } from 'api/utils';\nimport { closeSession } from 'apps/editor/execution/api';\nimport { findEditorConnector } from 'config/hueConfig';\nimport \"../utils/json.bigDataParse\";\nimport sleep from 'utils/timing/sleep';\nimport UUID from 'utils/string/UUID';\nvar ADD_TAGS_URL = '/metadata/api/catalog/add_tags';\nvar AUTOCOMPLETE_URL_PREFIX = '/api/v1/editor/autocomplete/';\nvar CANCEL_STATEMENT_URL = '/api/v1/editor/cancel_statement';\nvar CHECK_STATUS_URL = '/api/v1/editor/check_status';\nvar CLOSE_STATEMENT_URL = '/api/v1/editor/close_statement';\nvar DELETE_TAGS_URL = '/metadata/api/catalog/delete_tags';\nvar DESCRIBE_URL = '/api/v1/editor/describe/';\nvar FETCH_RESULT_DATA_URL = '/api/v1/editor/fetch_result_data';\nvar FIND_ENTITY_URL = '/metadata/api/catalog/find_entity';\nvar LIST_TAGS_URL = '/metadata/api/catalog/list_tags';\nvar METASTORE_TABLE_URL_PREFIX = '/metastore/table/';\nvar SAMPLE_URL_PREFIX = '/api/v1/editor/sample/';\nvar SEARCH_URL = '/desktop/api/search/entities';\nvar UPDATE_PROPERTIES_URL = '/metadata/api/catalog/update_properties';\nvar getEntryUrlPath = function getEntryUrlPath(entry) {\n  return entry.path.join('/') + (entry.path.length ? '/' : '');\n};\nvar performAnalyze = function performAnalyze(_ref) {\n  var entry = _ref.entry,\n    silenceErrors = _ref.silenceErrors;\n  if (entry.isDatabase()) {\n    return CancellablePromise.resolve();\n  }\n  var cancelled = false;\n  var pollForAnalysis = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(url, delay) {\n      var analyzeResponse;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return post(url, undefined, {\n              silenceErrors: silenceErrors\n            });\n          case 2:\n            analyzeResponse = _context.sent;\n            if (!cancelled) {\n              _context.next = 5;\n              break;\n            }\n            throw new Error('Cancelled');\n          case 5:\n            if (!(!analyzeResponse.isFailure && !analyzeResponse.isSuccess)) {\n              _context.next = 11;\n              break;\n            }\n            _context.next = 8;\n            return sleep(delay);\n          case 8:\n            return _context.abrupt(\"return\", pollForAnalysis(url, 1000));\n          case 11:\n            return _context.abrupt(\"return\", analyzeResponse);\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function pollForAnalysis(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return new CancellablePromise( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(resolve, reject, onCancel) {\n      var analyzeResponse;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            onCancel(function () {\n              cancelled = true;\n            });\n            _context2.prev = 1;\n            _context2.next = 4;\n            return post(\"/api/v1/\".concat(entry.getConnector().id === 'hive' ? 'beeswax' : entry.getConnector().id, \"/analyze/\").concat(getEntryUrlPath(entry)), undefined, {\n              silenceErrors: silenceErrors\n            });\n          case 4:\n            analyzeResponse = _context2.sent;\n            if (!(!cancelled && analyzeResponse && analyzeResponse.status === 0 && analyzeResponse.watch_url)) {\n              _context2.next = 13;\n              break;\n            }\n            _context2.t0 = resolve;\n            _context2.next = 9;\n            return pollForAnalysis(analyzeResponse.watch_url, 500);\n          case 9:\n            _context2.t1 = _context2.sent;\n            (0, _context2.t0)(_context2.t1);\n            _context2.next = 14;\n            break;\n          case 13:\n            reject('Analyze failed');\n          case 14:\n            _context2.next = 19;\n            break;\n          case 16:\n            _context2.prev = 16;\n            _context2.t2 = _context2[\"catch\"](1);\n            reject(_context2.t2 || 'Analyze failed');\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[1, 16]]);\n    }));\n    return function (_x3, _x4, _x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n};\nexport var fetchDescribe = function fetchDescribe(_ref4) {\n  var entry = _ref4.entry,\n    silenceErrors = _ref4.silenceErrors,\n    refreshAnalysis = _ref4.refreshAnalysis;\n  return new CancellablePromise( /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(resolve, reject, onCancel) {\n      var analyzePromise, _entry$path, database, table, fields, url, describePromise;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!entry.isSource()) {\n              _context3.next = 3;\n              break;\n            }\n            reject('Describe is not possible on the source');\n            return _context3.abrupt(\"return\");\n          case 3:\n            if (!refreshAnalysis) {\n              _context3.next = 13;\n              break;\n            }\n            analyzePromise = performAnalyze({\n              entry: entry,\n              silenceErrors: silenceErrors\n            });\n            onCancel(analyzePromise.cancel.bind(analyzePromise));\n            _context3.prev = 6;\n            _context3.next = 9;\n            return analyzePromise;\n          case 9:\n            _context3.next = 13;\n            break;\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](6);\n          case 13:\n            _entry$path = _toArray(entry.path), database = _entry$path[0], table = _entry$path[1], fields = _entry$path.slice(2);\n            url = \"\".concat(DESCRIBE_URL).concat(database);\n            if (table && fields.length) {\n              url += \"/\".concat(table, \"/stats/\").concat(fields.join('/'));\n            } else if (table) {\n              url += \"/\".concat(table, \"/\");\n            }\n            describePromise = post(url, {\n              format: 'json',\n              cluster: JSON.stringify(entry.compute),\n              source_type: getAssistConnectorId(entry),\n              connector: JSON.stringify(entry.getConnector())\n            }, {\n              silenceErrors: silenceErrors,\n              handleSuccess: function handleSuccess(response, postResolve, postReject) {\n                if (successResponseIsError(response)) {\n                  postReject(extractErrorMessage(response));\n                } else {\n                  var adjustedResponse = response;\n                  adjustedResponse.hueTimestamp = Date.now();\n                  postResolve(adjustedResponse);\n                }\n              }\n            });\n            _context3.prev = 17;\n            _context3.t1 = resolve;\n            _context3.next = 21;\n            return describePromise;\n          case 21:\n            _context3.t2 = _context3.sent;\n            (0, _context3.t1)(_context3.t2);\n            _context3.next = 28;\n            break;\n          case 25:\n            _context3.prev = 25;\n            _context3.t3 = _context3[\"catch\"](17);\n            reject(_context3.t3 || 'Describe failed');\n          case 28:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[6, 11], [17, 25]]);\n    }));\n    return function (_x6, _x7, _x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }());\n};\nexport var fetchClusters = function fetchClusters(connector, silenceErrors) {\n  return get(\"/desktop/api2/context/clusters/\".concat(connector.id), undefined, {\n    silenceErrors: silenceErrors\n  });\n};\nexport var fetchComputes = function fetchComputes(connector, silenceErrors) {\n  return get(\"/desktop/api2/context/computes/\".concat(connector.id), undefined, {\n    silenceErrors: silenceErrors\n  });\n};\nexport var fetchNamespaces = function fetchNamespaces(connector, silenceErrors) {\n  return get(\"/api/v1/get_namespaces/\".concat(connector.id), undefined, {\n    silenceErrors: silenceErrors\n  });\n};\nexport var fetchNavigatorMetadata = function fetchNavigatorMetadata(_ref6) {\n  var entry = _ref6.entry,\n    silenceErrors = _ref6.silenceErrors;\n  var params = new URLSearchParams();\n  var _entry$path2 = _slicedToArray(entry.path, 3),\n    database = _entry$path2[0],\n    tableOrView = _entry$path2[1],\n    field = _entry$path2[2];\n  if (database && tableOrView && field) {\n    params.append('type', 'field');\n    params.append('database', database);\n    params.append('table', tableOrView);\n  } else if (database && tableOrView) {\n    params.append('type', entry.isView() ? 'view' : 'table');\n    params.append('database', database);\n  } else if (database) {\n    params.append('type', 'database');\n  } else {\n    return CancellablePromise.reject('Navigator metadata is not possible on the source');\n  }\n  params.append('name', entry.name);\n  return post(\"\".concat(FIND_ENTITY_URL, \"?\").concat(params), {\n    notebook: {},\n    snippet: JSON.stringify({\n      type: entry.getConnector().id,\n      source: 'data'\n    }),\n    cluster: entry.compute && JSON.stringify(entry.compute) || '\"\"'\n  }, {\n    silenceErrors: silenceErrors,\n    handleSuccess: function handleSuccess(response, resolve, reject) {\n      if (successResponseIsError(response)) {\n        reject(extractErrorMessage(response));\n      } else {\n        var adjustedResponse = response.entity || response;\n        adjustedResponse.hueTimestamp = Date.now();\n        resolve(adjustedResponse);\n      }\n    }\n  });\n};\nexport var fetchAllNavigatorTags = function fetchAllNavigatorTags(_ref7) {\n  var silenceErrors = _ref7.silenceErrors;\n  return post(LIST_TAGS_URL, undefined, {\n    silenceErrors: silenceErrors,\n    handleSuccess: function handleSuccess(response, resolve, reject) {\n      if (successResponseIsError(response)) {\n        reject(extractErrorMessage(response));\n      } else {\n        resolve(response.tags || {});\n      }\n    }\n  });\n};\nexport var fetchPartitions = function fetchPartitions(_ref8) {\n  var entry = _ref8.entry,\n    silenceErrors = _ref8.silenceErrors;\n  return post(\"\".concat(METASTORE_TABLE_URL_PREFIX).concat(getEntryUrlPath(entry), \"partitions\"), {\n    format: 'json',\n    cluster: entry.compute && JSON.stringify(entry.compute) || '\"\"'\n  }, {\n    silenceErrors: silenceErrors,\n    handleSuccess: function handleSuccess(response, resolve, reject) {\n      var adjustedResponse = response || {};\n      adjustedResponse.hueTimestamp = Date.now();\n      if (successResponseIsError(response)) {\n        reject(\"Partitions failed: \".concat(extractErrorMessage(response)));\n      } else {\n        resolve(adjustedResponse);\n      }\n    },\n    handleError: function handleError(errorResponse, resolve, reject) {\n      if (errorResponse.response && errorResponse.response.data && errorResponse.response.data.indexOf('is not partitioned') !== -1) {\n        resolve({\n          hueTimestamp: Date.now(),\n          partition_keys_json: [],\n          partition_values_json: []\n        });\n      } else {\n        reject(errorResponse);\n      }\n    }\n  });\n};\n/**\n * Checks the status for the given snippet ID\n * Note: similar to notebook and search check_status.\n *\n * @param {Object} options\n * @param {Object} options.notebookJson\n * @param {Object} options.snippetJson\n * @param {boolean} [options.silenceErrors]\n *\n * @return {CancellableJqPromise}\n */\nvar whenAvailable = function whenAvailable(options) {\n  return new CancellablePromise( /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(resolve, reject, onCancel) {\n      var promiseToCancel, cancelled, checkStatusPromise, response, status, whenPromise;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            cancelled = false;\n            onCancel(function () {\n              cancelled = true;\n              if (promiseToCancel) {\n                promiseToCancel.cancel();\n              }\n            });\n            checkStatusPromise = post(CHECK_STATUS_URL, {\n              notebook: options.notebookJson,\n              snippet: options.snippetJson,\n              cluster: options.entry.compute && JSON.stringify(options.entry.compute) || '\"\"'\n            }, {\n              silenceErrors: options.silenceErrors\n            });\n            _context4.prev = 3;\n            promiseToCancel = checkStatusPromise;\n            _context4.next = 7;\n            return checkStatusPromise;\n          case 7:\n            response = _context4.sent;\n            if (!(response && response.query_status && response.query_status.status)) {\n              _context4.next = 34;\n              break;\n            }\n            status = response.query_status.status;\n            if (!(status === 'available')) {\n              _context4.next = 14;\n              break;\n            }\n            resolve(response.query_status);\n            _context4.next = 31;\n            break;\n          case 14:\n            if (!(status === 'running' || status === 'starting' || status === 'waiting')) {\n              _context4.next = 31;\n              break;\n            }\n            _context4.next = 17;\n            return sleep(500);\n          case 17:\n            _context4.prev = 17;\n            if (cancelled) {\n              _context4.next = 27;\n              break;\n            }\n            whenPromise = whenAvailable(options);\n            promiseToCancel = whenPromise;\n            _context4.t0 = resolve;\n            _context4.next = 24;\n            return whenPromise;\n          case 24:\n            _context4.t1 = _context4.sent;\n            (0, _context4.t0)(_context4.t1);\n            return _context4.abrupt(\"return\");\n          case 27:\n            _context4.next = 31;\n            break;\n          case 29:\n            _context4.prev = 29;\n            _context4.t2 = _context4[\"catch\"](17);\n          case 31:\n            reject(response.query_status);\n            _context4.next = 35;\n            break;\n          case 34:\n            reject('Cancelled');\n          case 35:\n            _context4.next = 40;\n            break;\n          case 37:\n            _context4.prev = 37;\n            _context4.t3 = _context4[\"catch\"](3);\n            reject(_context4.t3);\n          case 40:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[3, 37], [17, 29]]);\n    }));\n    return function (_x9, _x10, _x11) {\n      return _ref9.apply(this, arguments);\n    };\n  }());\n};\nexport var fetchSample = function fetchSample(_ref10) {\n  var entry = _ref10.entry,\n    silenceErrors = _ref10.silenceErrors,\n    operation = _ref10.operation,\n    sampleCount = _ref10.sampleCount;\n  return new CancellablePromise( /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(resolve, reject, onCancel) {\n      var cancellablePromises, notebookJson, snippetJson, closeQuery, cancelQuery, samplePromise, sampleResponse, queryResult, _queryResult$result, statusPromise, resultStatus, transformResponse, resultPromise, _sampleResponse, sample, closeSessions;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            cancellablePromises = [];\n            notebookJson = undefined;\n            snippetJson = undefined;\n            closeQuery = /*#__PURE__*/function () {\n              var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n                return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                  while (1) switch (_context5.prev = _context5.next) {\n                    case 0:\n                      if (!notebookJson) {\n                        _context5.next = 8;\n                        break;\n                      }\n                      _context5.prev = 1;\n                      _context5.next = 4;\n                      return post(CLOSE_STATEMENT_URL, {\n                        notebook: notebookJson,\n                        snippet: snippetJson\n                      }, {\n                        silenceErrors: true\n                      });\n                    case 4:\n                      _context5.next = 8;\n                      break;\n                    case 6:\n                      _context5.prev = 6;\n                      _context5.t0 = _context5[\"catch\"](1);\n                    case 8:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }, _callee5, null, [[1, 6]]);\n              }));\n              return function closeQuery() {\n                return _ref12.apply(this, arguments);\n              };\n            }();\n            cancelQuery = /*#__PURE__*/function () {\n              var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n                return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n                  while (1) switch (_context6.prev = _context6.next) {\n                    case 0:\n                      if (!notebookJson) {\n                        _context6.next = 8;\n                        break;\n                      }\n                      _context6.prev = 1;\n                      _context6.next = 4;\n                      return post(CANCEL_STATEMENT_URL, {\n                        notebook: notebookJson,\n                        snippet: snippetJson,\n                        cluster: entry.compute && JSON.stringify(entry.compute) || '\"\"'\n                      }, {\n                        silenceErrors: true\n                      });\n                    case 4:\n                      _context6.next = 8;\n                      break;\n                    case 6:\n                      _context6.prev = 6;\n                      _context6.t0 = _context6[\"catch\"](1);\n                    case 8:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }, _callee6, null, [[1, 6]]);\n              }));\n              return function cancelQuery() {\n                return _ref13.apply(this, arguments);\n              };\n            }();\n            onCancel(function () {\n              cancellablePromises.forEach(function (cancellable) {\n                return cancellable.cancel();\n              });\n            });\n            cancellablePromises.push({\n              cancel: function () {\n                var _cancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n                  return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n                    while (1) switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.prev = 0;\n                        _context7.next = 3;\n                        return cancelQuery();\n                      case 3:\n                        _context7.next = 7;\n                        break;\n                      case 5:\n                        _context7.prev = 5;\n                        _context7.t0 = _context7[\"catch\"](0);\n                      case 7:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }, _callee7, null, [[0, 5]]);\n                }));\n                function cancel() {\n                  return _cancel.apply(this, arguments);\n                }\n                return cancel;\n              }()\n            });\n            samplePromise = post(\"\".concat(SAMPLE_URL_PREFIX).concat(getEntryUrlPath(entry)), {\n              notebook: {},\n              snippet: JSON.stringify({\n                type: getAssistConnectorId(entry),\n                compute: entry.compute\n              }),\n              async: true,\n              operation: \"\\\"\".concat(operation || 'default', \"\\\"\"),\n              cluster: entry.compute && JSON.stringify(entry.compute) || '\"\"'\n            }, {\n              silenceErrors: silenceErrors\n            });\n            _context8.prev = 8;\n            cancellablePromises.push(samplePromise);\n            _context8.next = 12;\n            return samplePromise;\n          case 12:\n            sampleResponse = _context8.sent;\n            cancellablePromises.pop();\n            queryResult = {\n              id: UUID(),\n              type: sampleResponse.result && sampleResponse.result.type || entry.getConnector().id,\n              compute: entry.compute,\n              status: 'running',\n              result: sampleResponse.result || {}\n            };\n            queryResult.result.type = 'table';\n            notebookJson = JSON.stringify({\n              type: entry.getConnector().id\n            });\n            snippetJson = JSON.stringify(queryResult);\n            if (!(sampleResponse && sampleResponse.rows)) {\n              _context8.next = 23;\n              break;\n            }\n            // Sync results\n            resolve({\n              type: 'table',\n              hueTimestamp: Date.now(),\n              data: sampleResponse.rows,\n              meta: sampleResponse.full_headers || []\n            });\n            closeQuery();\n            _context8.next = 53;\n            break;\n          case 23:\n            statusPromise = whenAvailable({\n              notebookJson: notebookJson,\n              snippetJson: snippetJson,\n              entry: entry,\n              silenceErrors: silenceErrors\n            });\n            cancellablePromises.push(statusPromise);\n            _context8.next = 27;\n            return statusPromise;\n          case 27:\n            resultStatus = _context8.sent;\n            cancellablePromises.pop();\n            if (!(resultStatus.status !== 'available')) {\n              _context8.next = 33;\n              break;\n            }\n            reject();\n            closeQuery();\n            return _context8.abrupt(\"return\");\n          case 33:\n            if ((_queryResult$result = queryResult.result) !== null && _queryResult$result !== void 0 && _queryResult$result.handle && typeof resultStatus.has_result_set !== 'undefined') {\n              queryResult.result.handle.has_result_set = resultStatus.has_result_set;\n            }\n            snippetJson = JSON.stringify(queryResult);\n            transformResponse = function transformResponse(response) {\n              return JSON.bigdataParse(response);\n            };\n            resultPromise = post(FETCH_RESULT_DATA_URL, {\n              notebook: notebookJson,\n              snippet: snippetJson,\n              rows: sampleCount || 100,\n              startOver: 'false'\n            }, {\n              silenceErrors: silenceErrors,\n              transformResponse: transformResponse\n            });\n            _context8.next = 39;\n            return resultPromise;\n          case 39:\n            _sampleResponse = _context8.sent;\n            sample = {\n              hueTimestamp: Date.now(),\n              type: 'table',\n              data: _sampleResponse.result && _sampleResponse.result.data || [],\n              meta: _sampleResponse.result && _sampleResponse.result.meta || []\n            };\n            resolve(sample);\n            closeQuery();\n            cancellablePromises.pop();\n            closeSessions = window.CLOSE_SESSIONS;\n            if (!(closeSessions && closeSessions[entry.getConnector().dialect || ''] && queryResult.result.handle && queryResult.result.handle.session_id)) {\n              _context8.next = 53;\n              break;\n            }\n            _context8.prev = 46;\n            _context8.next = 49;\n            return closeSession({\n              session: {\n                id: queryResult.result.handle.session_id,\n                session_id: queryResult.result.handle.session_guid || '',\n                type: entry.getConnector().id,\n                properties: []\n              },\n              silenceErrors: silenceErrors\n            });\n          case 49:\n            _context8.next = 53;\n            break;\n          case 51:\n            _context8.prev = 51;\n            _context8.t0 = _context8[\"catch\"](46);\n          case 53:\n            _context8.next = 59;\n            break;\n          case 55:\n            _context8.prev = 55;\n            _context8.t1 = _context8[\"catch\"](8);\n            reject();\n            closeQuery();\n          case 59:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8, null, [[8, 55], [46, 51]]);\n    }));\n    return function (_x12, _x13, _x14) {\n      return _ref11.apply(this, arguments);\n    };\n  }());\n};\nexport var fetchSourceMetadata = function fetchSourceMetadata(_ref14) {\n  var entry = _ref14.entry,\n    silenceErrors = _ref14.silenceErrors;\n  return post(\"\".concat(AUTOCOMPLETE_URL_PREFIX).concat(getEntryUrlPath(entry)), {\n    notebook: {},\n    snippet: JSON.stringify({\n      type: getAssistConnectorId(entry),\n      source: 'data'\n    }),\n    operation: entry.isModel() ? 'model' : 'default',\n    cluster: entry.compute && JSON.stringify(entry.compute) || '\"\"'\n  }, {\n    silenceErrors: silenceErrors,\n    handleSuccess: function handleSuccess(response, resolve, reject) {\n      var message = response.error || response.message || '';\n      var adjustedResponse = response || {};\n      adjustedResponse.notFound = !!response && response.status === 0 && response.code === 500 && (message.indexOf('Error 10001') !== -1 || message.indexOf('AnalysisException') !== -1);\n      adjustedResponse.hueTimestamp = Date.now();\n      if (!adjustedResponse.notFound && successResponseIsError(response)) {\n        reject(extractErrorMessage(response));\n      } else {\n        resolve(adjustedResponse);\n      }\n    }\n  });\n};\n// this is a workaround for hplsql describe not working\nvar getAssistConnectorId = function getAssistConnectorId(entry) {\n  var connector = entry.getConnector();\n  if (connector.dialect === 'hplsql') {\n    var hiveConnector = findEditorConnector(function (connector) {\n      return connector.dialect === 'hive';\n    });\n    if (hiveConnector) {\n      return hiveConnector.id;\n    }\n  }\n  return connector.id;\n};\nexport var searchEntities = function searchEntities(_ref15) {\n  var limit = _ref15.limit,\n    query = _ref15.query,\n    rawQuery = _ref15.rawQuery,\n    silenceErrors = _ref15.silenceErrors,\n    sources = _ref15.sources;\n  return post(SEARCH_URL, {\n    query_s: JSON.stringify(query),\n    limit: limit || 100,\n    raw_query: !!rawQuery,\n    sources: sources && JSON.stringify(sources) || '[\"sql\"]'\n  }, {\n    silenceErrors: silenceErrors\n  });\n};\nexport var updateNavigatorProperties = function updateNavigatorProperties(_ref16) {\n  var deletedCustomMetadataKeys = _ref16.deletedCustomMetadataKeys,\n    identity = _ref16.identity,\n    modifiedCustomMetadata = _ref16.modifiedCustomMetadata,\n    properties = _ref16.properties,\n    silenceErrors = _ref16.silenceErrors;\n  var data = {\n    id: JSON.stringify(identity)\n  };\n  if (properties) {\n    data.properties = JSON.stringify(properties);\n  }\n  if (modifiedCustomMetadata) {\n    data.modifiedCustomMetadata = JSON.stringify(modifiedCustomMetadata);\n  }\n  if (deletedCustomMetadataKeys) {\n    data.deletedCustomMetadataKeys = JSON.stringify(deletedCustomMetadataKeys);\n  }\n  return post(UPDATE_PROPERTIES_URL, data, {\n    silenceErrors: silenceErrors\n  });\n};\nexport var updateSourceMetadata = function updateSourceMetadata(_ref17) {\n  var entry = _ref17.entry,\n    properties = _ref17.properties,\n    silenceErrors = _ref17.silenceErrors;\n  var url;\n  var data = {\n    source_type: entry.getConnector().id\n  };\n  if (entry.path.length === 1) {\n    url = \"/metastore/databases/\".concat(entry.path[0], \"/alter\");\n    data.properties = JSON.stringify(properties);\n  } else if (entry.path.length === 2) {\n    url = \"/metastore/table/\".concat(entry.path[0], \"/\").concat(entry.path[1], \"/alter\");\n    if (properties !== null && properties !== void 0 && properties.name) {\n      data.new_table_name = properties.name;\n    }\n  } else if (entry.path.length > 2) {\n    url = \"/metastore/table/\".concat(entry.path[0], \"/\").concat(entry.path[1], \"/alter_column\");\n    data.column = entry.path.slice(2).join('.');\n    if (properties !== null && properties !== void 0 && properties.name) {\n      data.new_column_name = properties.name;\n    }\n    if (properties !== null && properties !== void 0 && properties.type) {\n      data.new_column_type = properties.type;\n    }\n    if (properties !== null && properties !== void 0 && properties.partitions) {\n      data.partition_spec = JSON.stringify(properties.partitions);\n    }\n  }\n  if (properties !== null && properties !== void 0 && properties.comment) {\n    data.comment = properties.comment;\n  }\n  if (!url) {\n    return CancellablePromise.reject();\n  }\n  return post(url, data, {\n    silenceErrors: silenceErrors\n  });\n};\nexport var addNavTags = function addNavTags(entityId, tags) {\n  return post(ADD_TAGS_URL, {\n    id: JSON.stringify(entityId),\n    tags: JSON.stringify(tags)\n  });\n};\nexport var deleteNavTags = function deleteNavTags(entityId, tags) {\n  return post(DELETE_TAGS_URL, {\n    id: JSON.stringify(entityId),\n    tags: JSON.stringify(tags)\n  });\n};"],"names":[],"sourceRoot":""}